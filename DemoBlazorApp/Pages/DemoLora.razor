@page "/demo-lora"
@using KellerAg.Shared.LoRaPayloadConverter
@inject IConvert Converter
@using Newtonsoft.Json;
@using JsonToBusinessObjects.DataContainers

<h1>From LoRaWAN Network server (TTN, Actility, Loriot.io)</h1>

<RadzenTabs>
    <Tabs>

        <RadzenTabsItem Text="LoRa data FROM devices (uplink)">
            <div class="form-group">
                <RadzenCard>
                    <label for="LABEL LoRa 1">Decrypt KELLER LoRa-Payload to DTO</label>
                    <pre><code>    string gsmCommunicationText = await ...</code></pre>
                    <div class="btn-group" style="margin: 10px">
                        <RadzenButton Click="@(args => ChooseLoRaPayloadButtonClick(args, ExampleLoRaPayloadMeasurementText, 1))" Text="Load Example <br>Payload (Measurements)" Style="margin-left: 10px;" />
                        <RadzenButton Click="@(args => ChooseLoRaPayloadButtonClick(args, ExampleLoRaPayloadInformationText, 4))" Text="Load Example <br/>Payload (Device Information)" Style="margin-left: 10px;" />
                        <RadzenButton Click="@(args => ChooseLoRaPayloadButtonClick(args, ExampleLoRaPayloadConfigurationText, 5))" Text="Load Example Payload (Configuration)" Style="margin-left: 10px;" />
                    </div>
                    <RadzenTextArea @bind-Value="ExampleLoRaPayloadText" Rows="1" Change="@(args => DecryptPayload(args))" Style="margin-bottom: 20px"></RadzenTextArea>
                    <RadzenTextArea @bind-Value="_decryptedPayloadInfoText" Rows="30" ReadOnly Style="margin-bottom: 20px"></RadzenTextArea>

                </RadzenCard>
            </div>
            <div class="form-group">
                <RadzenCard>
                    <label for="LABEL LoRa 2">Decrypt LoRaWAN transmission JSON text to a more readable DTO using the KELLER LoRa-Payload decryption.</label>
                    <pre><code>    string gsmCommunicationText = await ...</code></pre>
                    <div class="btn-group" style="margin: 10px">
                        <RadzenButton Click="@(args => ChooseLoRaJsonMessageTextContentButtonClick(args, ExampleLoRaTransmissionTTNText))" Text="Load Example Transmission from TTN" Style="margin-left: 10px;" />
                        <RadzenButton Click="@(args => ChooseLoRaJsonMessageTextContentButtonClick(args, ExampleLoRaTransmissionActilityText))" Text="Load Example Transmission from Actility" Style="margin-left: 10px;" />
                        <RadzenButton Click="@(args => ChooseLoRaJsonMessageTextContentButtonClick(args, ExampleLoRaTransmissionLoriotText))" Text="Load Example Transmission from Loriot.io" Style="margin-left: 10px;" />
                    </div>

                    <RadzenTextArea @bind-Value="ExampleLoRaTransmissionText" Rows="6" Change="@(args => DecryptLoRaJsonMessage(args))" Style="margin-bottom: 20px"></RadzenTextArea>
                    <RadzenTextArea @bind-Value="_decryptedLoRaJsonMessageText" Rows="30" ReadOnly Style="margin-bottom: 20px"></RadzenTextArea>
                </RadzenCard>
            </div>
        </RadzenTabsItem>

        <RadzenTabsItem Text="LoRa data TO devices (downlink)">
            <RadzenCard>
                <label for="LABEL LoRa 3">From a readable DTO (DeviceSettings) to a list of KELLER LoRa-Payload strings</label>
                <pre><code>    string gsmCommunicationText = await ...</code></pre>

                <RadzenTextArea @bind-Value="ExampleDeviceSettingsJson" Rows="6" Change="@(args => ConvertDeviceSettingsToLoRaPayloads(args))" Style="margin-bottom: 20px"></RadzenTextArea>
                <RadzenTextArea @bind-Value="CombinedConvertedPayloads" Rows="6" Style="margin-bottom: 20px" ReadOnly></RadzenTextArea>
            </RadzenCard>

            <RadzenCard>
                <label for="LABEL LoRa 4">From a readable DTO (PayloadInfo) to a list of KELLER LoRa-Payload strings</label>
                <pre><code>    string gsmCommunicationText = await ...</code></pre>
                <RadzenTextArea @bind-Value="ExamplePayloadInfoJson" Rows="20" Change="@(args => ConvertPayloadInfoToLoRaPayloads(args))" Style="margin-bottom: 20px"></RadzenTextArea>
                <RadzenTextArea @bind-Value="CombinedConvertedPayloads" Rows="4" Style="margin-bottom: 20px" ReadOnly></RadzenTextArea>
            </RadzenCard>

        </RadzenTabsItem>
    </Tabs>
</RadzenTabs>

@code {


    protected override void OnInitialized()
    {
        _port = 1;
        ExampleLoRaPayloadText = ExampleLoRaPayloadMeasurementText;
        DecryptPayload(ExampleLoRaPayloadMeasurementText);

        ExampleLoRaTransmissionText = ExampleLoRaTransmissionTTNText;
        DecryptLoRaJsonMessage(ExampleLoRaTransmissionTTNText);

        ExampleDeviceSettingsJson = "TODO";
        ConvertDeviceSettingsToLoRaPayloads(ExampleDeviceSettingsJson);


        PayloadInformation pi = Converter.LoRaPayloadToLoRaMessage("1F011302000313042F0DFF0E000F00100115051603",4);
        ExamplePayloadInfoJson = JsonConvert.SerializeObject(pi, Formatting.Indented);
        ConvertPayloadInfoToLoRaPayloads(ExamplePayloadInfoJson);
    }


    private string ExampleDeviceSettingsJson { get; set; }
    private List<string> ConvertedPayloads { get; set; }

    private string CombinedConvertedPayloads { get; set; }

    private string ExamplePayloadInfoJson { get; set; }
    void ConvertDeviceSettingsToLoRaPayloads(string value)
    {
        ConvertedPayloads = new List<string>();
        ConvertedPayloads.Add("TODO  ( " + value + " )");
        CombinedConvertedPayloads = string.Join($"{Environment.NewLine}", ConvertedPayloads);
        StateHasChanged();
    }


    void ConvertPayloadInfoToLoRaPayloads(string payloadInfoJson)
    {
        var payloadInfo = JsonConvert.DeserializeObject<PayloadInformation>(payloadInfoJson);
        ConvertedPayloads = PayloadConverter.ConvertToActility(payloadInfo);
        CombinedConvertedPayloads = string.Join($"{Environment.NewLine}", ConvertedPayloads);
        StateHasChanged();
    }


    private const string ExampleLoRaPayloadMeasurementText   = "010501d37fc000007fc000007fc000003f76c8b441bb33333920ac08";  //Actility Port 1
    private const string ExampleLoRaPayloadInformationText   = "DAETABMtAAAAHCVPHbBAnfMsYyg=";  //TTN Port 4
    private const string ExampleLoRaPayloadConfigurationText = "20011300132F0D010301000500D3FF000001550005010503"; //Actility Port 5

    private const string ExampleLoRaTransmissionTTNText      = @"{""app_id"":""ldtapplication"",""dev_id"":""ldtdevice1"",""hardware_serial"":""0004A30B001EC250"",""port"":1,""counter"":0,""payload_raw"":""AQUB03/AAAB/wAAAf8AAAD94px5BxdcKAAAAAA=="",""payload_fields"":{""Channel_1"":5.104235503814077e+38,""Channel_2"":5.104235503814077e+38,""Channel_3"":5.104235503814077e+38,""Channel_4"":0.9713000059127808,""channel"":""0000000111010011"",""ct"":5,""func"":1,""payload"":""AQswAD93JxNBu1wp""},""metadata"":{""time"":""2017-10-30T11:18:25.511380476Z"",""frequency"":867.1,""modulation"":""LORA"",""data_rate"":""SF12BW125"",""coding_rate"":""4/5"",""gateways"":[{""gtw_id"":""eui-c0ee40ffff29356b"",""timestamp"":300640588,""time"":"""",""channel"":3,""rssi"":-42,""snr"":9,""latitude"":47.49873,""longitude"":8.746949},{""gtw_id"":""kellergw2"",""gtw_trusted"":true,""timestamp"":509643924,""time"":""2017-10-30T11:17:44Z"",""channel"":3,""rssi"":-61,""snr"":9.5,""latitude"":47.498688,""longitude"":8.747711}]},""downlink_url"":""https://integrations.thethingsnetwork.org/ttn-eu/api/v2/down/ldtapplication/httpldttest?key=ttn-account-v2.4vThJdZ2ISzcdwppUzCaLWsBmF1_GszPXEOglkR3AfA""}";
    private const string ExampleLoRaTransmissionActilityText = @"{""DevEUI_uplink"":{""Time"":""2017-11-07T09:51:01.107+01:00"",""DevEUI"":""0004A30B001E5CD8"",""FPort"":""1"",""FCntUp"":""7"",""ADRbit"":""1"",""MType"":""2"",""FCntDn"":""1"",""payload_hex"":""010501d37fc000007fc000007fc000003f76c8b441bb33333920ac08"",""mic_hex"":""22cf05de"",""Lrcid"":""00000401"",""LrrRSSI"":""-65.000000"",""LrrSNR"":""9.500000"",""SpFact"":""7"",""SubBand"":""G1"",""Channel"":""LC1"",""DevLrrCnt"":""1"",""Lrrid"":""004A09F8"",""Late"":""0"",""Lrrs"":{""Lrr"":[{""Lrrid"":""004A09F8"",""Chain"":""0"",""LrrRSSI"":""-65.000000"",""LrrSNR"":""9.500000"",""LrrESP"":""-65.461838""}]},""CustomerID"":""100000526"",""CustomerData"":{""loc"":{""lat"":""47.49825679999999"",""lon"":""8.747362100000032""},""alr"":{""pro"":""LORA/Generic"",""ver"":""1""}},""ModelCfg"":""1:New"",""AppSKey"":""d5bbf0b5f659f7d72eef31182b1788cc"",""InstantPER"":""0.000000"",""MeanPER"":""0.000000"",""DevAddr"":""094B5DAE""}}";
    private const string ExampleLoRaTransmissionLoriotText   = @"{""cmd"":""rx"",""seqno"":1131,""EUI"":""0004A30B001FFA11"",""ts"":1522938365141,""fcnt"":4,""port"":1,""freq"":868300000,""rssi"":-101,""snr"":6.2,""toa"":1974,""dr"":""SF12 BW125 4/5"",""ack"":false,""bat"":251,""data"":""010500d37fc000007fc000007fc000003f77006941cacccd""}";

    private void ChooseLoRaPayloadButtonClick(MouseEventArgs args, string payloadText, int port)
    {
        ExampleLoRaPayloadText = payloadText;
        _port = port;
        DecryptPayload(payloadText);
        StateHasChanged();
    }

    private string ExampleLoRaPayloadText { get; set; }
    private string _decryptedPayloadInfoText;
    private int _port;
    private void DecryptPayload(string payloadText)
    {
        ExampleLoRaPayloadText = payloadText;
        PayloadInformation payLoadInfo = Converter.LoRaPayloadToLoRaMessage(payloadText, _port);
        string payLoadInfoText = JsonConvert.SerializeObject(payLoadInfo, Formatting.Indented);
        _decryptedPayloadInfoText = payLoadInfoText;
        StateHasChanged();
    }

    private string ExampleLoRaTransmissionText { get; set; }
    private string _decryptedLoRaJsonMessageText;
    private void ChooseLoRaJsonMessageTextContentButtonClick(MouseEventArgs args, string transmissionJsonText)
    {
        ExampleLoRaTransmissionText = transmissionJsonText;
        DecryptLoRaJsonMessage(transmissionJsonText);
    }

    void DecryptLoRaJsonMessage(string value)
    {
        ExampleLoRaTransmissionText = value;
        BusinessObjectRoot businessObjectRoot = Converter.LoRaJsonMessageToBusinessObject(value);
        var businessObjectRootText = JsonConvert.SerializeObject(businessObjectRoot, Formatting.Indented);
        _decryptedLoRaJsonMessageText = businessObjectRootText;
        StateHasChanged();
    }
}
